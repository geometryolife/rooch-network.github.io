"use strict";(self.webpackChunkrooch_network=self.webpackChunkrooch_network||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Overview","href":"/docs/","docId":"overview"},{"type":"link","label":"Why Rooch","href":"/docs/why-rooch","docId":"why-rooch"},{"type":"link","label":"What is Rooch","href":"/docs/what-is-rooch","docId":"what-is-rooch"},{"type":"link","label":"Layer2 projects Overview","href":"/docs/layer2-overview","docId":"layer2-overview"},{"type":"category","label":"Technology Overview","collapsible":true,"collapsed":false,"items":[{"type":"category","label":"Modular Architecture","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Multi-chain Settlement protocol","href":"/docs/technology/modular-blockchain-architecture/multi-chain-settlement-protocol","docId":"technology/modular-blockchain-architecture/multi-chain-settlement-protocol"}],"href":"/docs/technology/modular-blockchain-architecture/"},{"type":"link","label":"Fraud Proofs","href":"/docs/technology/fraud-proofs","docId":"technology/fraud-proofs"},{"type":"link","label":"Transaction Accumulator Proofs","href":"/docs/technology/transaction-accumulator-proofs","docId":"technology/transaction-accumulator-proofs"},{"type":"link","label":"Decentralized validator network","href":"/docs/technology/decentralized-validator-network","docId":"technology/decentralized-validator-network"},{"type":"link","label":"Parallel Transaction Execution","href":"/docs/technology/parallel-transaction-execution","docId":"technology/parallel-transaction-execution"},{"type":"link","label":"State Scaling for Layer1","href":"/docs/technology/state-scaling","docId":"technology/state-scaling"},{"type":"category","label":"Why Move?","collapsible":false,"collapsed":false,"items":[{"type":"link","label":"Cross Layer Interoperability","href":"/docs/technology/move-on-rooch/cross-layer-interoperability","docId":"technology/move-on-rooch/cross-layer-interoperability"},{"type":"link","label":"Account Abstraction","href":"/docs/technology/move-on-rooch/account-abstraction","docId":"technology/move-on-rooch/account-abstraction"},{"type":"link","label":"Rooch Framework","href":"/docs/technology/move-on-rooch/rooch-framework","docId":"technology/move-on-rooch/rooch-framework"},{"type":"link","label":"MoveOS","href":"/docs/technology/move-on-rooch/moveos","docId":"technology/move-on-rooch/moveos"}],"href":"/docs/technology/move-on-rooch/"},{"type":"category","label":"State Channel on P2P Network","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Streaming payment","href":"/docs/technology/state-channel/streaming-payment","docId":"technology/state-channel/streaming-payment"},{"type":"link","label":"SmartContract on State Channel","href":"/docs/technology/state-channel/channel-contract","docId":"technology/state-channel/channel-contract"}],"href":"/docs/technology/state-channel/"}],"href":"/docs/technology/"},{"type":"link","label":"Use Cases","href":"/docs/usecases/","docId":"usecases/index"},{"type":"category","label":"Miscellaneous","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Contribution Guide","href":"/docs/miscellaneous/contributing","docId":"miscellaneous/contributing"}]}]},"docs":{"layer2-overview":{"id":"layer2-overview","title":"Layer2 projects Overview","description":"Analyze the technical solutions and features of the current Layer2 projects, learn about the exploration of different solution approaches by each project, and get another perspective on Rooch.","sidebar":"tutorialSidebar"},"miscellaneous/contributing":{"id":"miscellaneous/contributing","title":"Contribution Guide","description":"How to Contribute","sidebar":"tutorialSidebar"},"overview":{"id":"overview","title":"Overview","description":"Rooch is a modular layer2 that supports multi-chain settlement, using Move as the smart contract language and security guaranteed by Ethereum. It aims to connect the multi-chain ecosystem with Web3, provides scalability for public chains, Move execution environment and settlement protocol for Web3 DApp.","sidebar":"tutorialSidebar"},"technology/decentralized-validator-network":{"id":"technology/decentralized-validator-network","title":"Decentralized validator network","description":"In the current Layer2 solution, it is a challenge how to decentralize the sequencer. If the sequencer cannot be decentralized, on the one hand, there is a single point of risk that the whole network will be unavailable when the sequencer is down, and on the other hand, there is also the risk of sequencer fraud. Before transactions are written in batches to the data availability layer and the consensus layer, the sequencer can fraud by dropping transactions or adjusting the order of transactions.","sidebar":"tutorialSidebar"},"technology/fraud-proofs":{"id":"technology/fraud-proofs","title":"Fraud Proofs","description":"Fraud Proof is the most critical part of the Layer2 project to ensure security. Only when fraud-proof is implemented, and fraud on Layer2 can be punished at the arbitration layer, we can guarantee the security of users\' assets.","sidebar":"tutorialSidebar"},"technology/index":{"id":"technology/index","title":"Technology Overview","description":"The previous chapter gave the reader an overview of what Rooch is and what it does. This section is to answer the question \\"How Rooch work?\\".","sidebar":"tutorialSidebar"},"technology/modular-blockchain-architecture/index":{"id":"technology/modular-blockchain-architecture/index","title":"Modular Architecture","description":"Why Modular?","sidebar":"tutorialSidebar"},"technology/modular-blockchain-architecture/multi-chain-settlement-protocol":{"id":"technology/modular-blockchain-architecture/multi-chain-settlement-protocol","title":"Multi-chain Settlement protocol","description":"Multi-chain settlement is the most important feature of Rooch, and this chapter details the protocols and challenges to be solved for multi-chain settlement.","sidebar":"tutorialSidebar"},"technology/move-on-rooch/account-abstraction":{"id":"technology/move-on-rooch/account-abstraction","title":"Account Abstraction","description":"Move\'s programing model is very conducive to account abstraction, as the account feature of Move Layer1 is implemented through the Move contract. In Rooch, we need to support multiple settlement layers to ensure that multiple Layer1 accounts can be mapped to Rooch accounts, so we need the Account Abstraction to achieve this.","sidebar":"tutorialSidebar"},"technology/move-on-rooch/cross-layer-interoperability":{"id":"technology/move-on-rooch/cross-layer-interoperability","title":"Cross Layer Interoperability","description":"Cross-layer interoperability is one of the challenges in a layered solution, and the following solutions for cross-layer interaction are provided in Rooch.","sidebar":"tutorialSidebar"},"technology/move-on-rooch/index":{"id":"technology/move-on-rooch/index","title":"Why Move?","description":"Move is a programming language for writing safe smart contracts originally developed at Facebook to power the Diem blockchain. Move is designed to be a platform-agnostic language to enable common libraries, tooling, and developer communities across diverse blockchains with vastly different data and execution models.","sidebar":"tutorialSidebar"},"technology/move-on-rooch/moveos":{"id":"technology/move-on-rooch/moveos","title":"MoveOS","description":"MoveOS is a Move execution environment based on MoveVM, which aims to shield the differences in adapters between different Move Layers1 and provide a unified Move runtime environment for Move applications, making it easy for developers to integrate Move into different applications.","sidebar":"tutorialSidebar"},"technology/move-on-rooch/rooch-framework":{"id":"technology/move-on-rooch/rooch-framework","title":"Rooch Framework","description":"Rooch Framework is Rooch\'s core Move libraries, which has the following main modules.","sidebar":"tutorialSidebar"},"technology/parallel-transaction-execution":{"id":"technology/parallel-transaction-execution","title":"Parallel Transaction Execution","description":"Parallel transaction execution allows transactions to be executed on multiple CPU cores simultaneously, leading to higher single-host throughput, this is a common optimization approach in the Web2 infrastructure area.","sidebar":"tutorialSidebar"},"technology/state-channel/channel-contract":{"id":"technology/state-channel/channel-contract","title":"SmartContract on State Channel","description":"The current state channel solutions all only enable payments through the state channel. If a new asset type is invented and wants to be applied in state channel, the solution of the state channel needs to be redesigned. It has been a challenge to implement a universal state channel that can execute smart contracts.","sidebar":"tutorialSidebar"},"technology/state-channel/index":{"id":"technology/state-channel/index","title":"State Channel on P2P Network","description":"The State Channel, or Payment Channel, represented by the Lightning Network, is a proven scaling solution. The idea is that each participant pledges a certain amount of assets on the chain, and then maintains a local consensus state off-chain that contains only the participants, and each transaction only needs to be confirmed by the participants together\uff0cso it can support high frequency transactions in the channel.","sidebar":"tutorialSidebar"},"technology/state-channel/streaming-payment":{"id":"technology/state-channel/streaming-payment","title":"Streaming payment","description":"Transactions in a state channel requires only participants confirmation, so its throughput is limited only by the network bandwidth between participant nodes, so it makes streaming or micropayments possible.","sidebar":"tutorialSidebar"},"technology/state-scaling":{"id":"technology/state-scaling","title":"State Scaling for Layer1","description":"Blockchain wants to carry massive users, in addition to solving the throughput problem of transaction execution, there is also a problem that the industry has not yet generally concerned about is the state expansion. Obviously, if hundreds of millions of users hold many types of assets and application states on the chain, the state explosion problem will soon have to be faced.","sidebar":"tutorialSidebar"},"technology/transaction-accumulator-proofs":{"id":"technology/transaction-accumulator-proofs","title":"Transaction Accumulator Proofs","description":"Transaction accumulator proofs provide proof that a transaction is in a certain position. Suppose the sequencer tampered with the order of a transaction or dropped a transaction. In that case, the user or verifier can initiate arbitration with the arbitration layer contract via the transaction accumulator proof.","sidebar":"tutorialSidebar"},"usecases/index":{"id":"usecases/index","title":"Use Cases","description":"This section describes the features of Rooch that bring new possibilities for applications, and new scenarios.","sidebar":"tutorialSidebar"},"what-is-rooch":{"id":"what-is-rooch","title":"What is Rooch","description":"Following the conclusion of Why Rooch?,","sidebar":"tutorialSidebar"},"why-rooch":{"id":"why-rooch","title":"Why Rooch","description":"After all these years of development, the blockchain industry has achieved initial proof in the fields of Cryptocurrency and DeFi, and the prototypes of applications are already present, but how to make blockchain technology adopted by massive users is the most important challenge that the industry needs to solve at present.","sidebar":"tutorialSidebar"}}}')}}]);